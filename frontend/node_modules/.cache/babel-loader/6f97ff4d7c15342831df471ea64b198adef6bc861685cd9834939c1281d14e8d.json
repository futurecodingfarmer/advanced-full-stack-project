{"ast":null,"code":"var _jsxFileName = \"/Users/yiminglu/Downloads/advanced-starting-fullstack-project/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport RootLayout from './pages/Root';\nimport HomePage from './pages/Home';\nimport EventsPage from './pages/Events';\nimport EditEventPage from './pages/EditEvent';\nimport EventDetailPage from './pages/EventDetail';\nimport NewEventPage from './pages/NewEvent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // covert to all realtive \n  const router = createBrowserRouter([{\n    path: '/',\n    element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 14\n    }, this),\n    children: [{\n      path: '/',\n      element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 26\n      }, this)\n    }, {\n      path: '/events',\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 32\n      }, this)\n    }, {\n      path: '/events/:eventId',\n      element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 41\n      }, this)\n    }, {\n      path: '/events/new',\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 36\n      }, this)\n    }, {\n      path: '/events/:eventId/edit',\n      element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 46\n      }, this)\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: router\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","RootLayout","HomePage","EventsPage","EditEventPage","EventDetailPage","NewEventPage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/Users/yiminglu/Downloads/advanced-starting-fullstack-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport RootLayout from './pages/Root';\nimport HomePage from './pages/Home';\nimport EventsPage from './pages/Events';\nimport EditEventPage from './pages/EditEvent';\nimport EventDetailPage from './pages/EventDetail';\nimport NewEventPage from './pages/NewEvent';\n\nfunction App() {\n  // covert to all realtive \n  const router = createBrowserRouter([{\n    path: '/',\n    element: <RootLayout/>,\n    children:[\n      {path:'/', element:<HomePage/>},\n      {path:'/events', element:<EventsPage/>},\n      {path:'/events/:eventId', element:<EventDetailPage/>},\n      {path:'/events/new', element:<NewEventPage/>},\n      {path:'/events/:eventId/edit', element:<EditEventPage/>},\n    ]\n\n  }])\n\n\n\n  return <>\n    <RouterProvider router={router} />\n  </>;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,UAAU,MAAM,gBAAgB;AACvC,OAAOC,aAAa,MAAM,mBAAmB;AAC7C,OAAOC,eAAe,MAAM,qBAAqB;AACjD,OAAOC,YAAY,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EACb;EACA,MAAMC,MAAM,GAAGb,mBAAmB,CAAC,CAAC;IAClCc,IAAI,EAAE,GAAG;IACTC,OAAO,eAAEN,OAAA,CAACP,UAAU;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;IACtBC,QAAQ,EAAC,CACP;MAACN,IAAI,EAAC,GAAG;MAAEC,OAAO,eAACN,OAAA,CAACN,QAAQ;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE,CAAC,EAC/B;MAACL,IAAI,EAAC,SAAS;MAAEC,OAAO,eAACN,OAAA,CAACL,UAAU;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE,CAAC,EACvC;MAACL,IAAI,EAAC,kBAAkB;MAAEC,OAAO,eAACN,OAAA,CAACH,eAAe;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE,CAAC,EACrD;MAACL,IAAI,EAAC,aAAa;MAAEC,OAAO,eAACN,OAAA,CAACF,YAAY;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE,CAAC,EAC7C;MAACL,IAAI,EAAC,uBAAuB;MAAEC,OAAO,eAACN,OAAA,CAACJ,aAAa;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE,CAAC;EAG5D,CAAC,CAAC,CAAC;EAIH,oBAAOV,OAAA,CAAAE,SAAA;IAAAS,QAAA,eACLX,OAAA,CAACR,cAAc;MAACY,MAAM,EAAEA;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAG,iBACjC;AACL;AAACE,EAAA,GApBQT,GAAG;AAsBZ,eAAeA,GAAG;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}