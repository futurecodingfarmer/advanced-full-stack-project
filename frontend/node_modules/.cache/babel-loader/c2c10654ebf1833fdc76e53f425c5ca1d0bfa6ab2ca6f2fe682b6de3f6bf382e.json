{"ast":null,"code":"var _jsxFileName = \"/Users/yiminglu/Downloads/advanced-starting-fullstack-project/frontend/src/components/EventForm.js\",\n  _s = $RefreshSig$();\nimport { useNavigate, Form, useNavigation, useActionData } from 'react-router-dom';\nimport classes from './EventForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventForm(_ref) {\n  _s();\n  let {\n    method,\n    event\n  } = _ref;\n  const data = useActionData();\n  const navigate = useNavigate();\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === \"submitting\";\n  function cancelHandler() {\n    navigate('..');\n  }\n  return (\n    /*#__PURE__*/\n    //Form will omit the things you sent to the backend but to give to your action\n    _jsxDEV(Form, {\n      method: method,\n      className: classes.form,\n      children: [data && data.errors && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.values(data.errors).map(err => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: err\n        }, err, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 48\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"title\",\n          type: \"text\",\n          name: \"title\",\n          required: true,\n          defaultValue: event ? event.title : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"image\",\n          type: \"url\",\n          name: \"image\",\n          required: true,\n          defaultValue: event ? event.image : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"date\",\n          type: \"date\",\n          name: \"date\",\n          required: true,\n          defaultValue: event ? event.date : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          rows: \"5\",\n          required: true,\n          defaultValue: event ? event.description : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: cancelHandler,\n          disabled: isSubmitting,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: isSubmitting,\n          children: isSubmitting ? 'submitting' : 'save'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(EventForm, \"4RpZWvb1/vq18jUIhqcDrPiPElE=\", false, function () {\n  return [useActionData, useNavigate, useNavigation];\n});\n_c = EventForm;\nexport default EventForm;\nexport const action = async _ref2 => {\n  let {\n    request,\n    params\n  } = _ref2;\n  const data = await request.formData();\n  co;\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Failed to send event data to back-end'\n    }, {\n      status: 500\n    });\n  }\n  ;\n  return redirect('/events');\n};\nvar _c;\n$RefreshReg$(_c, \"EventForm\");","map":{"version":3,"names":["useNavigate","Form","useNavigation","useActionData","classes","jsxDEV","_jsxDEV","EventForm","_ref","_s","method","event","data","navigate","navigation","isSubmitting","state","cancelHandler","className","form","children","errors","Object","values","map","err","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","name","required","defaultValue","title","image","date","rows","description","actions","onClick","disabled","_c","action","_ref2","request","params","formData","co","eventData","get","response","fetch","headers","body","JSON","stringify","ok","json","message","status","redirect","$RefreshReg$"],"sources":["/Users/yiminglu/Downloads/advanced-starting-fullstack-project/frontend/src/components/EventForm.js"],"sourcesContent":["import { useNavigate, Form, useNavigation, useActionData } from 'react-router-dom';\n\nimport classes from './EventForm.module.css';\n\nfunction EventForm({ method, event }) {\n  const data =  useActionData();\n  const navigate = useNavigate();\n  const navigation = useNavigation();\n\n  const isSubmitting = navigation.state === \"submitting\";\n\n\n  function cancelHandler() {\n    navigate('..');\n  }\n\n  return (\n    //Form will omit the things you sent to the backend but to give to your action\n    <Form method={method} className={classes.form}>\n      {data && data.errors && <ul>\n        {Object.values(data.errors).map(err => <li key={err}>{err}</li>)}\n      </ul> }\n      <p>\n        <label htmlFor=\"title\">Title</label>\n        <input\n          id=\"title\"\n          type=\"text\"\n          name=\"title\"\n          required\n          defaultValue={event ? event.title : \"\"}\n        />\n      </p>\n      <p>\n        <label htmlFor=\"image\">Image</label>\n        <input id=\"image\" type=\"url\" name=\"image\" required defaultValue={event ? event.image: \"\"} />\n      </p>\n      <p>\n        <label htmlFor=\"date\">Date</label>\n        <input id=\"date\" type=\"date\" name=\"date\" required defaultValue={event ? event.date : \"\"} />\n      </p>\n      <p>\n        <label htmlFor=\"description\">Description</label>\n        <textarea id=\"description\" name=\"description\" rows=\"5\" required  defaultValue={event ? event.description : \"\"}/>\n      </p>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={cancelHandler} disabled={isSubmitting}>\n          Cancel\n        </button>\n        <button disabled={isSubmitting}>{isSubmitting ? 'submitting' : 'save'}</button>\n      </div>\n    </Form>\n  );\n}\n\nexport default EventForm;\n\n\nexport const action = async ({ request, params }) => {\n  const data = await request.formData();\n  co\n\n  const eventData = {\n      title: data.get('title'),\n      image: data.get('image'),\n      date: data.get('date'),\n      description: data.get('description')\n  };\n\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\",\n   },\n    body: JSON.stringify(eventData),\n  });\n\n  \n\n  if(!response.ok){\n      throw json({message: 'Failed to send event data to back-end'}, {\n          status: 500\n      })\n  };\n  \n  return redirect('/events');\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}