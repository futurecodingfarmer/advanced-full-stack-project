{"ast":null,"code":"var _jsxFileName = \"/Users/yiminglu/Downloads/advanced-starting-fullstack-project/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useRouteLoaderData, json, redirect, defer } from \"react-router-dom\";\nimport EventItem from '../components/EventItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetailsPage = props => {\n  _s();\n  const data = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 12\n  }, this);\n};\n_s(EventDetailsPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailsPage;\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch events.'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\n;\nasync function loadEvent(id) {\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.event;\n  }\n}\n;\nexport const loader = async _ref => {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  return defer();\n};\nexport const action = async _ref2 => {\n  let {\n    request,\n    params\n  } = _ref2;\n  const eventId = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not delete event'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n};\nexport default EventDetailsPage;\nvar _c;\n$RefreshReg$(_c, \"EventDetailsPage\");","map":{"version":3,"names":["useRouteLoaderData","json","redirect","defer","EventItem","jsxDEV","_jsxDEV","EventDetailsPage","props","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvents","response","fetch","ok","message","status","resData","events","loadEvent","id","loader","_ref","request","params","eventId","action","_ref2","method","$RefreshReg$"],"sources":["/Users/yiminglu/Downloads/advanced-starting-fullstack-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { useRouteLoaderData, json, redirect, defer } from \"react-router-dom\";\nimport EventItem from '../components/EventItem';\n\nconst EventDetailsPage = (props) => {\n    const data = useRouteLoaderData('event-detail');\n    \n    return <EventItem event={data.event} />;\n\n};\n\n\nasync function loadEvents(){\n    const response = await fetch('http://localhost:8080/events');\n    \n    if (!response.ok) {\n     throw json({ message: 'Could not fetch events.' }, {\n        status: 500\n      });\n    } else {\n      const resData = await response.json();\n      return resData.events;\n    }\n  \n};\n\nasync function loadEvent(id){\n    const response = await fetch('http://localhost:8080/events/' + id );\n\n    if(!response.ok){\n        throw json({message: 'Could not fetch details for selected event'}, {\n            status: 500\n        });\n    }else{\n      const resData = await response.json();\n      return resData.event;\n    }\n\n};\n\n\n\nexport const loader = async ({request, params}) => {\n\n    const id = params.eventId;\n    return defer(\n        \n    )\n\n};\n\nexport const action = async ({request, params}) => {\n\n    const eventId = params.eventId;\n    const response = await fetch('http://localhost:8080/events/' + eventId, {\n        method: request.method\n    } );\n\n    if(!response.ok){\n        throw json({message: 'Could not delete event'}, {\n            status: 500\n        });\n    }\n    \n    return redirect('/events');\n\n};\n\n\n\nexport default EventDetailsPage;"],"mappings":";;AAAA,SAASA,kBAAkB,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,kBAAkB;AAC5E,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAChC,MAAMC,IAAI,GAAGV,kBAAkB,CAAC,cAAc,CAAC;EAE/C,oBAAOM,OAAA,CAACF,SAAS;IAACO,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAE3C,CAAC;AAACN,EAAA,CALIF,gBAAgB;EAAA,QACLP,kBAAkB;AAAA;AAAAgB,EAAA,GAD7BT,gBAAgB;AAQtB,eAAeU,UAAUA,CAAA,EAAE;EACvB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACjB,MAAMnB,IAAI,CAAC;MAAEoB,OAAO,EAAE;IAA0B,CAAC,EAAE;MAChDC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,MAAM;IACL,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACjB,IAAI,EAAE;IACrC,OAAOsB,OAAO,CAACC,MAAM;EACvB;AAEJ;AAAC;AAED,eAAeC,SAASA,CAACC,EAAE,EAAC;EACxB,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGO,EAAE,CAAE;EAEnE,IAAG,CAACR,QAAQ,CAACE,EAAE,EAAC;IACZ,MAAMnB,IAAI,CAAC;MAACoB,OAAO,EAAE;IAA4C,CAAC,EAAE;MAChEC,MAAM,EAAE;IACZ,CAAC,CAAC;EACN,CAAC,MAAI;IACH,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACjB,IAAI,EAAE;IACrC,OAAOsB,OAAO,CAACZ,KAAK;EACtB;AAEJ;AAAC;AAID,OAAO,MAAMgB,MAAM,GAAG,MAAAC,IAAA,IAA6B;EAAA,IAAtB;IAACC,OAAO;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAE1C,MAAMF,EAAE,GAAGI,MAAM,CAACC,OAAO;EACzB,OAAO5B,KAAK,EAEX;AAEL,CAAC;AAED,OAAO,MAAM6B,MAAM,GAAG,MAAAC,KAAA,IAA6B;EAAA,IAAtB;IAACJ,OAAO;IAAEC;EAAM,CAAC,GAAAG,KAAA;EAE1C,MAAMF,OAAO,GAAGD,MAAM,CAACC,OAAO;EAC9B,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGY,OAAO,EAAE;IACpEG,MAAM,EAAEL,OAAO,CAACK;EACpB,CAAC,CAAE;EAEH,IAAG,CAAChB,QAAQ,CAACE,EAAE,EAAC;IACZ,MAAMnB,IAAI,CAAC;MAACoB,OAAO,EAAE;IAAwB,CAAC,EAAE;MAC5CC,MAAM,EAAE;IACZ,CAAC,CAAC;EACN;EAEA,OAAOpB,QAAQ,CAAC,SAAS,CAAC;AAE9B,CAAC;AAID,eAAeK,gBAAgB;AAAC,IAAAS,EAAA;AAAAmB,YAAA,CAAAnB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}